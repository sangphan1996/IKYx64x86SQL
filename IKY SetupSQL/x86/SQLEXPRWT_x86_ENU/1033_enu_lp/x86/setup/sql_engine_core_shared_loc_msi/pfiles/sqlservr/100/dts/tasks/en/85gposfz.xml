<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>Microsoft.SqlServer.TransferStoredProceduresTask</name>
	</assembly>
	<members>
		<member name="N:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask">
			<summary>The <see cref="N:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask" /> namespace contains the methods, properties, and enumerations that allow you to copy stored procedures from the master database located on one instance of SQL Server to another.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists">
			<summary>Contains values used by the <see cref="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.IfObjectExists" /> property of the <see cref="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask" /> to determine how to handle a transfer when the stored procedure exists at the destination.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists.FailTask">
			<summary>Causes the task to fail if the same stored procedure exists at the destination.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists.Overwrite">
			<summary>Overwrites the job if the same stored procedure exists at the destination.</summary>
		</member>
		<member name="F:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists.Skip">
			<summary>Skips the transfer of a stored procedure if the same stored procedure exists at the destination.</summary>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask">
			<summary>Contains the methods, properties, and enumerations that allow you to copy stored procedures from the master database located on one instance of SQL Server to another. This class cannot be inherited. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.#ctor">
			<summary>Initializes a new instance of the <see cref="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask" /> class. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.AcceptBreakpointManager(Microsoft.SqlServer.Dts.Runtime.BreakpointManager)">
			<summary>Passes a <see cref="T:Microsoft.SqlServer.Dts.Runtime.BreakpointManager" /> to a task. This method is called by the runtime and is not used in code.</summary>
			<param name="manager">The breakpoint manager specific for this task.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.Execute(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,System.Object)">
			<summary>Runs the task.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> enumeration.</returns>
			<param name="connections">A collection of connections used by the task.</param>
			<param name="variableDispenser">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> object for locking variables.</param>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" /> interface.</param>
			<param name="log">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> interface.</param>
			<param name="transaction">The transaction object that the container is a part of. This value can be null.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.InitializeTask(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging,Microsoft.SqlServer.Dts.Runtime.EventInfos,Microsoft.SqlServer.Dts.Runtime.LogEntryInfos,Microsoft.SqlServer.Dts.Runtime.ObjectReferenceTracker)">
			<summary>Initializes the properties associated with the task. This method is called by the runtime and is not used in code.</summary>
			<param name="connections">A collection of connections used by the task.</param>
			<param name="variableDispenser">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> object for locking variables.</param>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> interface.</param>
			<param name="log">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> interface.</param>
			<param name="eventInfos">A collection that contains events to be raised during execution of the task.</param>
			<param name="logEntryInfos">A collection of log entries.</param>
			<param name="refTracker">An object reference tracker.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.LoadFromXML(System.Xml.XmlElement,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)">
			<summary>This method is not callable by your application code. To load a package saved as .xml, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.LoadPackage(System.String,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> method.</summary>
			<param name="rootNode">The node that contains the information to be loaded.</param>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.ResumeExecution">
			<summary>Resumes execution of the task after pausing. The task or container is resumed by the run-time engine. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.SaveToXML(System.Xml.XmlDocument,Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents)">
			<summary>This method is not callable by your application code. To save a package as .xml, use the <see cref="M:Microsoft.SqlServer.Dts.Runtime.Application.SaveToXml(System.String,Microsoft.SqlServer.Dts.Runtime.Package,Microsoft.SqlServer.Dts.Runtime.IDTSEvents)" /> method.</summary>
			<param name="doc">The XML document to which to save the information.</param>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSInfoEvents" /> interface for raising events (errors, warnings, and so on) during persistence.</param>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.SuspendExecution">
			<summary>Indicates that the executable needs to suspend. This method is called by the run-time engine. </summary>
		</member>
		<member name="M:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.Validate(Microsoft.SqlServer.Dts.Runtime.Connections,Microsoft.SqlServer.Dts.Runtime.VariableDispenser,Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents,Microsoft.SqlServer.Dts.Runtime.IDTSLogging)">
			<summary>Verifies that the component is properly configured.</summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Runtime.DTSExecResult" /> enumeration.</returns>
			<param name="connections">A collection of connections used by the task.</param>
			<param name="variableDispenser">A <see cref="T:Microsoft.SqlServer.Dts.Runtime.VariableDispenser" /> object for locking variables.</param>
			<param name="events">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSComponentEvents" /> interface.</param>
			<param name="log">An object that implements the <see cref="T:Microsoft.SqlServer.Dts.Runtime.IDTSLogging" /> interface.</param>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.DebugMode">
			<summary>Gets or sets a Boolean indicating whether a task should determine whether breakpoints are enabled. </summary>
			<returns>true if the task should determine whether breakpoints are enabled; false if the task can ignore all breakpoints.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.DestinationConnection">
			<summary>Gets or sets a String containing the name of the SMO connection manager for the source/destination database.</summary>
			<returns>A String that contains the SMO connection manager.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.ExecutionValue">
			<summary>Returns an object containing a count of the number of stored procedures that were transferred.</summary>
			<returns>An object that contains the number of stored procedures that were transferred.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.IfObjectExists">
			<summary>Gets or sets a value from the <see cref="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists" /> enumeration indicating if the task should fail, overwrite the existing stored procedure, or skip the transfer of the stored procedureif a stored procedurewith the same name exists at the destination. </summary>
			<returns>A value from the <see cref="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.IfObjectExists" /> enumeration indicating whether the task should fail, ignore the existing stored procedure, or skip the transfer of the stored procedure, if a stored procedureof the same name exists at the destination.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.SourceConnection">
			<summary>Gets or sets a String containing the name of the SMO connection manager for the source/destination database.</summary>
			<returns>A String that contains the connection string of the SMO connection manager.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.StoredProceduresList">
			<summary>Gets or sets a StringCollection containing a comma-delimited list of stored procedure names.</summary>
			<returns>A StringCollection that contains a comma-delimited list of stored procedure names.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.SuspendRequired">
			<summary>Gets or sets a Boolean indicating whether the task should suspend when it encounters a breakpoint. This value is set by the run-time engine for the task or container when a breakpoint is encountered.</summary>
			<returns>true if the task suspends; false if the task can ignore the breakpoint.</returns>
		</member>
		<member name="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.TransferAllStoredProcedures">
			<summary>A Boolean indicating whether all stored procedures in the master database of the source SQL Server are transferred, or only the specified stored procedures.</summary>
			<returns>true if all stored procedures in the master database are transferred. false if only those stored procedures named in the <see cref="P:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.StoredProceduresList" /> are transferred.</returns>
		</member>
		<member name="T:Microsoft.SqlServer.Dts.Tasks.TransferStoredProceduresTask.TransferStoredProceduresTask.DtsTransferSPException">
			<summary>The exception that is thrown at load time if the persisted name of the XML root node of the task is corrupt.</summary>
		</member>
	</members>
</doc>